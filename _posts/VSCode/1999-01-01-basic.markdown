---
layout: post
title:  "Windows小白"
categories: vscode
---

作为一名 Windows 新手，如果你想学习编程，首先需要熟悉一些基本的 Windows 操作。这些操作将帮助你更有效地管理文件、软件、设置开发环境以及解决常见问题。以下是你在开始编程之前应该掌握的一些 Windows 基本操作的详细说明：

### 1. **文件和文件夹管理**
编程涉及大量的文件管理，如创建、组织代码文件，查找项目文件等。因此，理解文件和文件夹的基本操作非常重要。

- **创建、重命名和删除文件/文件夹**：
  - **创建**：在文件资源管理器（File Explorer）中，右键点击空白处，选择“新建”并选择“文件夹”或相关文件类型。
  - **重命名**：右键点击文件/文件夹，选择“重命名”，然后输入新名称。
  - **删除**：右键点击文件/文件夹，选择“删除”。也可以选择后按下 `Delete` 键。

- **文件夹结构和路径理解**：
  - 学习如何在文件夹之间导航，理解根目录、子目录和文件路径（例如 `C:\Users\你的用户名\Documents\`）。
  - **地址栏**：可以在文件资源管理器中点击地址栏直接输入文件路径，快速导航到目标位置。

- **文件扩展名**：
  - 开启显示文件扩展名的功能，帮助你识别文件类型（如 `.txt`, `.cpp`, `.py` 等）。
  - 打开方法：在资源管理器中点击 **查看 > 文件扩展名**。

- **压缩和解压缩文件**：
  - 编程中经常会下载压缩的库文件或代码文件。学习如何使用 Windows 自带的压缩/解压缩工具或第三方软件（如 7-Zip、WinRAR）来操作压缩文件。

### 2. **命令提示符 (CMD) 和 PowerShell**
编程过程中，你会经常使用命令行来运行程序、管理环境或安装工具。因此，学习基本的命令行操作是非常重要的。

- **打开命令提示符**：
  - 你可以通过 **开始 > 搜索** `cmd` 或 `命令提示符` 来打开。
  
- **常用命令**：
  - **`cd`**：切换目录。例如 `cd C:\Users\你的用户名\Documents` 切换到 Documents 文件夹。
  - **`dir`**：列出当前目录的文件和文件夹。
  - **`mkdir`**：创建文件夹。例如 `mkdir myProject`。
  - **`del`**：删除文件。例如 `del file.txt`。
  - **`copy`**：复制文件。例如 `copy source.txt destination.txt`。
  
- **打开 PowerShell**：
  - 右键点击开始按钮，选择 **Windows PowerShell** 或者在搜索栏输入 `PowerShell` 并打开。
  - PowerShell 命令与 CMD 类似，但功能更强大，支持更复杂的操作。

### 3. **安装和管理软件**
在学习编程过程中，你需要安装很多开发工具、编译器、编辑器等。

- **安装软件**：
  - **从网站下载**：熟悉如何从官方网站下载软件安装包（如 VS Code、GCC、Python 等）。
  - **运行安装程序**：双击 `.exe` 文件，按照提示进行安装。你可能需要管理员权限来完成安装。
  - **设置安装路径**：默认情况下软件会安装到 `C:\Program Files`，但有时你可以自定义安装路径。

- **卸载软件**：
  - 打开 **控制面板 > 程序 > 程序和功能**，找到你要卸载的程序，右键选择 **卸载**。

- **使用包管理器**（如 `choco` 或 `winget`）：
  - Windows 也有命令行包管理器，允许你通过命令行快速安装软件。例如：
    ```bash
    winget install VisualStudioCode
    ```

### 4. **环境变量配置**
许多编程工具需要你配置环境变量才能正确运行，特别是在命令行中使用时。

- **什么是环境变量**：环境变量是操作系统用于存储一些系统路径或配置信息的全局变量，常见的如 `PATH`，它告诉系统在哪里查找可执行文件。

- **设置环境变量**：
  1. 右键点击 **此电脑**，选择 **属性**。
  2. 点击 **高级系统设置**，选择 **环境变量**。
  3. 找到 **系统变量** 下的 `Path`，点击 **编辑**。
  4. 添加你安装的工具路径。例如：`C:\mingw64\bin`，确保你能在命令行中使用 `gcc` 命令。

- **验证环境变量**：打开 CMD 或 PowerShell，输入 `gcc --version`，如果能看到版本信息，说明配置成功。

### 5. **文本编辑器与代码编辑器**
编写代码时需要使用合适的编辑器，如 Notepad++ 或 Visual Studio Code（推荐）。

- **安装 VS Code**：
  - 从 [VS Code 官方网站](https://code.visualstudio.com/) 下载并安装。
  
- **使用 VS Code**：
  - 学习如何在 VS Code 中创建、编辑和保存代码文件。
  - 了解基本的快捷键，如：
    - `Ctrl+N`：新建文件。
    - `Ctrl+S`：保存文件。
    - `Ctrl+P`：快速打开文件。
  - 安装 **扩展**：VS Code 有丰富的扩展库，搜索并安装如 **C/C++**、**Python**、**Git** 等扩展。

### 6. **开发工具的使用**
根据你学习的编程语言，安装并设置开发工具和编译器。

- **C/C++ 编译器**：
  - 在 Windows 上可以安装 MinGW 或者 WSL（Windows Subsystem for Linux）来使用 `gcc` 和 `g++`。
  - 在 VS Code 中配置编译和运行环境。

- **Python 开发环境**：
  - 从 [Python 官方网站](https://www.python.org/) 下载并安装 Python。
  - 学习如何在命令行中运行 Python 程序：
    ```bash
    python yourscript.py
    ```

### 7. **使用浏览器查找资料**
在编程学习过程中，查阅文档和寻找问题解决方案非常重要。

- **常用开发者网站**：
  - **Stack Overflow**：全球最受欢迎的开发者社区，查找编程问题的解决方案。
  - **GitHub**：代码托管平台，查找开源项目和代码示例。
  - **官方文档**：学习任何语言时，阅读其官方文档是最权威的方式，如 [Python Docs](https://docs.python.org/) 或 [C++ Reference](https://en.cppreference.com/)。

- **快捷使用搜索引擎**：使用 Google、Bing 等搜索引擎，查找编程问题解决方案，常用搜索关键词：
  - **编程语言问题**：如“C++ how to sort an array”。
  - **错误提示**：如“Python TypeError: list object is not callable”。

### 8. **安装和使用 Git**
版本控制是编程中重要的技能之一，Git 是最流行的版本控制工具。

- **安装 Git**：
  - 从 [Git 官方网站](https://git-scm.com/) 下载并安装。
  
- **基本 Git 命令**：
  - **`git init`**：初始化 Git 仓库。
  - **`git add`**：添加文件到暂存区。
  - **`git commit`**：提交文件到仓库。
  - **`git push`**：推送本地更改到远程仓库（如 GitHub）。

- **GitHub**：学习如何使用 GitHub 来托管和共享你的代码项目。


### 总结

通过掌握以上这些 Windows 基本操作，你将能够更加高效地进行编程学习，并更好地管理开发环境。熟悉文件管理、命令行操作、软件安装、环境变量设置等技能是编程的基础，随着你在编程中的深入，你还会逐步学习和掌握更高级的工具和概念。